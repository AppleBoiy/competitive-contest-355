<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_validator_8cpp_source" xml:lang="en-US">
<title>validator.cpp</title>
<indexterm><primary>src/validator.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_validator_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_testlib_8h">testlib.h</link>&quot;</emphasis>
<anchor xml:id="_validator_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;bits/stdc++.h&gt;</emphasis>
<anchor xml:id="_validator_8cpp_source_1l00003"/>00003 
<anchor xml:id="_validator_8cpp_source_1l00004"/>00004 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_validator_8cpp_source_1l00005"/><link linkend="_validator_8cpp_1a261b5420e17ff6b4908171e2220d5cce">00005</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_validator_8cpp_1a261b5420e17ff6b4908171e2220d5cce">prime</link>(<emphasis role="keywordtype">int</emphasis>&#32;x)&#32;{
<anchor xml:id="_validator_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;==&#32;1)
<anchor xml:id="_validator_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_validator_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;2;&#32;i&#32;*&#32;i&#32;&lt;=&#32;x;&#32;i++)&#32;{
<anchor xml:id="_validator_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;%&#32;i&#32;==&#32;0)
<anchor xml:id="_validator_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_validator_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;}
<anchor xml:id="_validator_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_validator_8cpp_source_1l00013"/>00013 }
<anchor xml:id="_validator_8cpp_source_1l00014"/><link linkend="_validator_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627">00014</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_defaultsol_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv)&#32;{
<anchor xml:id="_validator_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a92d612e581676b81e9162f70839e88ef">registerValidation</link>(argc,&#32;argv);
<anchor xml:id="_validator_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;<link linkend="_testlib_8h_1ad3874376581d36b1067d501d534d7b34">inf</link>.<link linkend="_struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38">readInt</link>(1,&#32;1000,&#32;<emphasis role="stringliteral">&quot;N&quot;</emphasis>);
<anchor xml:id="_validator_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1ad3874376581d36b1067d501d534d7b34">inf</link>.<link linkend="_struct_in_stream_1a034c0ee97269f7bbd1e73ccc85b13f54">readEoln</link>();
<anchor xml:id="_validator_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;has_prime&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_validator_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;i++)&#32;{
<anchor xml:id="_validator_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x&#32;=&#32;<link linkend="_testlib_8h_1ad3874376581d36b1067d501d534d7b34">inf</link>.<link linkend="_struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38">readInt</link>(1,&#32;1000,&#32;<emphasis role="stringliteral">&quot;X&quot;</emphasis>);
<anchor xml:id="_validator_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;has_prime&#32;|=&#32;<link linkend="_validator_8cpp_1a261b5420e17ff6b4908171e2220d5cce">prime</link>(x);
<anchor xml:id="_validator_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;!=&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>)
<anchor xml:id="_validator_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1ad3874376581d36b1067d501d534d7b34">inf</link>.<link linkend="_struct_in_stream_1a012e968b18b359b82897db805faeb0f6">readSpace</link>();
<anchor xml:id="_validator_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="_validator_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1ad3874376581d36b1067d501d534d7b34">inf</link>.<link linkend="_struct_in_stream_1a034c0ee97269f7bbd1e73ccc85b13f54">readEoln</link>();
<anchor xml:id="_validator_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1aa645d5ce2acb62ee61977d4ecf8e4dbc">ensuref</link>(has_prime,&#32;<emphasis role="stringliteral">&quot;There&#32;is&#32;no&#32;prime&#32;number!&quot;</emphasis>);
<anchor xml:id="_validator_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1ad3874376581d36b1067d501d534d7b34">inf</link>.<link linkend="_struct_in_stream_1a80e53f1d7a022f34f8d88839de43d6b5">readEof</link>();
<anchor xml:id="_validator_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_validator_8cpp_source_1l00029"/>00029 }
</programlisting></section>
