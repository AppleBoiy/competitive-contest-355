<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_test_8cpp_source" xml:lang="en-US">
<title>test.cpp</title>
<indexterm><primary>src/test.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_test_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_testlib_8h">testlib.h</link>&quot;</emphasis>
<anchor xml:id="_test_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;bits/stdc++.h&gt;</emphasis>
<anchor xml:id="_test_8cpp_source_1l00003"/>00003 
<anchor xml:id="_test_8cpp_source_1l00004"/>00004 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_test_8cpp_source_1l00005"/><link linkend="_test_8cpp_1a261b5420e17ff6b4908171e2220d5cce">00005</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_test_8cpp_1a261b5420e17ff6b4908171e2220d5cce">prime</link>(<emphasis role="keywordtype">int</emphasis>&#32;x)&#32;{
<anchor xml:id="_test_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;==&#32;1)
<anchor xml:id="_test_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_test_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;2;&#32;i&#32;*&#32;i&#32;&lt;=&#32;x;&#32;i++)&#32;{
<anchor xml:id="_test_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;%&#32;i&#32;==&#32;0)
<anchor xml:id="_test_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_test_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;}
<anchor xml:id="_test_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_test_8cpp_source_1l00013"/>00013 }
<anchor xml:id="_test_8cpp_source_1l00014"/>00014 
<anchor xml:id="_test_8cpp_source_1l00015"/><link linkend="_test_8cpp_1a0ddf1224851353fc92bfbff6f499fa97">00015</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_defaultsol_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*argv[])&#32;{
<anchor xml:id="_test_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1ad1cfbe9e8fcaabcd1598206e3ff1ad76">registerGen</link>(argc,&#32;argv,&#32;1);
<anchor xml:id="_test_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;min_n&#32;=&#32;atoi(argv[1]);
<anchor xml:id="_test_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max_n&#32;=&#32;atoi(argv[2]);
<anchor xml:id="_test_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;<link linkend="_testlib_8h_1a5743b8b2167a45883185605a8d8e10ce">rnd</link>.<link linkend="_classrandom__t_1adb0b3734666df2f17c7d60b33db87ad6">next</link>(min_n,&#32;max_n);
<anchor xml:id="_test_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;&lt;&lt;&#32;endl;
<anchor xml:id="_test_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;vector&lt;int&gt;&#32;a(<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>);
<anchor xml:id="_test_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;has_prime&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_test_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;i++)&#32;{
<anchor xml:id="_test_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a[i]&#32;=&#32;<link linkend="_testlib_8h_1a5743b8b2167a45883185605a8d8e10ce">rnd</link>.<link linkend="_classrandom__t_1adb0b3734666df2f17c7d60b33db87ad6">next</link>(1,&#32;1000);
<anchor xml:id="_test_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;has_prime&#32;|=&#32;<link linkend="_test_8cpp_1a261b5420e17ff6b4908171e2220d5cce">prime</link>(a[i]);
<anchor xml:id="_test_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;}
<anchor xml:id="_test_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!has_prime)&#32;{
<anchor xml:id="_test_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x&#32;=&#32;<link linkend="_testlib_8h_1a5743b8b2167a45883185605a8d8e10ce">rnd</link>.<link linkend="_classrandom__t_1adb0b3734666df2f17c7d60b33db87ad6">next</link>(1,&#32;1000);
<anchor xml:id="_test_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;has_prime&#32;|=&#32;<link linkend="_test_8cpp_1a261b5420e17ff6b4908171e2220d5cce">prime</link>(x);
<anchor xml:id="_test_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a[0]&#32;=&#32;x;
<anchor xml:id="_test_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;}
<anchor xml:id="_test_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a892cac7bffad68bec03005d0a771c3c7">shuffle</link>(a.begin(),&#32;a.end());
<anchor xml:id="_test_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;a[0];
<anchor xml:id="_test_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;i++)&#32;{
<anchor xml:id="_test_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;a[i];
<anchor xml:id="_test_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;}
<anchor xml:id="_test_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;endl;
<anchor xml:id="_test_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_test_8cpp_source_1l00039"/>00039 }
</programlisting></section>
