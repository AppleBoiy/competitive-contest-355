<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_checker_8cpp_source" xml:lang="en-US">
<title>checker.cpp</title>
<indexterm><primary>src/checker.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_checker_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_testlib_8h">testlib.h</link>&quot;</emphasis>
<anchor xml:id="_checker_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;bits/stdc++.h&gt;</emphasis>
<anchor xml:id="_checker_8cpp_source_1l00003"/>00003 
<anchor xml:id="_checker_8cpp_source_1l00004"/>00004 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_checker_8cpp_source_1l00005"/><link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">00005</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;
<anchor xml:id="_checker_8cpp_source_1l00006"/>00006 
<anchor xml:id="_checker_8cpp_source_1l00007"/><link linkend="_checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999">00007</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999">has</link>[1010];
<anchor xml:id="_checker_8cpp_source_1l00008"/><link linkend="_checker_8cpp_1a261b5420e17ff6b4908171e2220d5cce">00008</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_checker_8cpp_1a261b5420e17ff6b4908171e2220d5cce">prime</link>(<emphasis role="keywordtype">int</emphasis>&#32;x)&#32;{
<anchor xml:id="_checker_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;==&#32;1)
<anchor xml:id="_checker_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_checker_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;2;&#32;i&#32;*&#32;i&#32;&lt;=&#32;x;&#32;i++)&#32;{
<anchor xml:id="_checker_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;%&#32;i&#32;==&#32;0)
<anchor xml:id="_checker_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_checker_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;}
<anchor xml:id="_checker_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_checker_8cpp_source_1l00016"/>00016 }
<anchor xml:id="_checker_8cpp_source_1l00017"/><link linkend="_checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0">00017</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0">readAns</link>(<link linkend="_struct_in_stream">InStream</link>&#32;&amp;stream)&#32;{
<anchor xml:id="_checker_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac">ans</link>&#32;=&#32;stream.<link linkend="_struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38">readInt</link>(1,&#32;1000);
<anchor xml:id="_checker_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999">has</link>[<link linkend="_testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac">ans</link>]&#32;==&#32;0)
<anchor xml:id="_checker_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_checker_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_checker_8cpp_1a261b5420e17ff6b4908171e2220d5cce">prime</link>(<link linkend="_testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac">ans</link>)&#32;==&#32;0)
<anchor xml:id="_checker_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_checker_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_checker_8cpp_source_1l00024"/>00024 }
<anchor xml:id="_checker_8cpp_source_1l00025"/>00025 
<anchor xml:id="_checker_8cpp_source_1l00026"/><link linkend="_checker_8cpp_1a0ddf1224851353fc92bfbff6f499fa97">00026</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_defaultsol_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*argv[])&#32;{
<anchor xml:id="_checker_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1aef178d6340fe04d5d616ee2da19488b4">registerTestlibCmd</link>(argc,&#32;argv);
<anchor xml:id="_checker_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;<link linkend="_testlib_8h_1ad3874376581d36b1067d501d534d7b34">inf</link>.<link linkend="_struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38">readInt</link>();
<anchor xml:id="_checker_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;i++)&#32;{
<anchor xml:id="_checker_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x&#32;=&#32;<link linkend="_testlib_8h_1ad3874376581d36b1067d501d534d7b34">inf</link>.<link linkend="_struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38">readInt</link>();
<anchor xml:id="_checker_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999">has</link>[x]&#32;=&#32;1;
<anchor xml:id="_checker_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="_checker_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;jans&#32;=&#32;<link linkend="_checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0">readAns</link>(<link linkend="_testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac">ans</link>);
<anchor xml:id="_checker_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pans&#32;=&#32;<link linkend="_checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0">readAns</link>(<link linkend="_testlib_8h_1a93822943d6413c3eba20a27b9d31336b">ouf</link>);
<anchor xml:id="_checker_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(jans&#32;==&#32;0)
<anchor xml:id="_checker_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01">quitf</link>(<link linkend="_testlib_8h_1aca738f43134375f0a18077d633f14578a62d8da32e96f367adeed7ccb30436457">_fail</link>,&#32;<emphasis role="stringliteral">&quot;Jury&#32;answer&#32;Incorrect,&#32;The&#32;number&#32;is&#32;not&#32;prime!!!&quot;</emphasis>);
<anchor xml:id="_checker_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(jans&#32;==&#32;-1)
<anchor xml:id="_checker_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01">quitf</link>(
<anchor xml:id="_checker_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1aca738f43134375f0a18077d633f14578a62d8da32e96f367adeed7ccb30436457">_fail</link>,
<anchor xml:id="_checker_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Jury&#32;answer&#32;Incorrect,&#32;the&#32;number&#32;is&#32;not&#32;from&#32;the&#32;input&#32;array!!!&quot;</emphasis>);
<anchor xml:id="_checker_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pans&#32;==&#32;0)
<anchor xml:id="_checker_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01">quitf</link>(<link linkend="_testlib_8h_1aca738f43134375f0a18077d633f14578a77706596ca6256a69b77e763d6787585">_wa</link>,&#32;<emphasis role="stringliteral">&quot;participant&#32;answer&#32;Incorrect,&#32;The&#32;number&#32;is&#32;not&#32;prime.&quot;</emphasis>);
<anchor xml:id="_checker_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pans&#32;==&#32;-1)
<anchor xml:id="_checker_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01">quitf</link>(<link linkend="_testlib_8h_1aca738f43134375f0a18077d633f14578a77706596ca6256a69b77e763d6787585">_wa</link>,
<anchor xml:id="_checker_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;participant&#32;answer&#32;Incorrect,&#32;the&#32;number&#32;is&#32;not&#32;from&#32;the&#32;input&#32;&quot;</emphasis>
<anchor xml:id="_checker_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;array.&quot;</emphasis>);
<anchor xml:id="_checker_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac">ans</link>.<link linkend="_struct_in_stream_1a2c7c8561462345e6ee18a0d8ea4bc00b">seekEof</link>())
<anchor xml:id="_checker_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01">quitf</link>(<link linkend="_testlib_8h_1aca738f43134375f0a18077d633f14578a62d8da32e96f367adeed7ccb30436457">_fail</link>,&#32;<emphasis role="stringliteral">&quot;Jury&#32;answer&#32;contain&#32;extra&#32;tokens!!!&quot;</emphasis>);
<anchor xml:id="_checker_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_testlib_8h_1a93822943d6413c3eba20a27b9d31336b">ouf</link>.<link linkend="_struct_in_stream_1a2c7c8561462345e6ee18a0d8ea4bc00b">seekEof</link>())
<anchor xml:id="_checker_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01">quitf</link>(<link linkend="_testlib_8h_1aca738f43134375f0a18077d633f14578a77706596ca6256a69b77e763d6787585">_wa</link>,&#32;<emphasis role="stringliteral">&quot;Participant&#32;answer&#32;contain&#32;extra&#32;tokens.&quot;</emphasis>);
<anchor xml:id="_checker_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<link linkend="_testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01">quitf</link>(<link linkend="_testlib_8h_1aca738f43134375f0a18077d633f14578a9d802c77af97a77eec509a12bcf6ae77">_ok</link>,&#32;<emphasis role="stringliteral">&quot;Passed&#32;all&#32;tests.&quot;</emphasis>);
<anchor xml:id="_checker_8cpp_source_1l00052"/>00052 }
</programlisting></section>
