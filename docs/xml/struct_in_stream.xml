<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="struct_in_stream" kind="struct" language="C++" prot="public">
    <compoundname>InStream</compoundname>
    <includes refid="testlib_8h" local="no">testlib.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_in_stream_1ab970f7b2a0f0a699c6f3187f5b565c35" prot="public" static="no" mutable="no">
        <type><ref refid="class_input_stream_reader" kindref="compound">InputStreamReader</ref> *</type>
        <definition>InputStreamReader* InStream::reader</definition>
        <argsstring></argsstring>
        <name>reader</name>
        <qualifiedname>InStream::reader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2007" column="23" bodyfile="src/testlib.h" bodystart="2007" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a2e44f54a6f11bf8337e742ec131ac0b5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int InStream::lastLine</definition>
        <argsstring></argsstring>
        <name>lastLine</name>
        <qualifiedname>InStream::lastLine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2008" column="9" bodyfile="src/testlib.h" bodystart="2008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a0e45bfde029064fc64c36c1462e6ba8b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string InStream::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>InStream::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2010" column="17" bodyfile="src/testlib.h" bodystart="2010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a22c9fbb12ed6da923353c3a477881686" prot="public" static="no" mutable="no">
        <type><ref refid="testlib_8h_1ae73df2968f2f656074dc00e062600ddb" kindref="member">TMode</ref></type>
        <definition>TMode InStream::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <qualifiedname>InStream::mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2011" column="11" bodyfile="src/testlib.h" bodystart="2011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1ac1db0153031be42e22117179c7cc70bf" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InStream::opened</definition>
        <argsstring></argsstring>
        <name>opened</name>
        <qualifiedname>InStream::opened</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2012" column="10" bodyfile="src/testlib.h" bodystart="2012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a66d3e4b4c823f79d1f53ad5901733717" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InStream::stdfile</definition>
        <argsstring></argsstring>
        <name>stdfile</name>
        <qualifiedname>InStream::stdfile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2013" column="10" bodyfile="src/testlib.h" bodystart="2013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a8aec5ed448357d952d4fae14e4054d8c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InStream::strict</definition>
        <argsstring></argsstring>
        <name>strict</name>
        <qualifiedname>InStream::strict</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2014" column="10" bodyfile="src/testlib.h" bodystart="2014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a8afeeed49266480bd239d832415fb85b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int InStream::wordReserveSize</definition>
        <argsstring></argsstring>
        <name>wordReserveSize</name>
        <qualifiedname>InStream::wordReserveSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2016" column="9" bodyfile="src/testlib.h" bodystart="2016" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1af2f09659cea3fd78f1e662cd918d2c30" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string InStream::_tmpReadToken</definition>
        <argsstring></argsstring>
        <name>_tmpReadToken</name>
        <qualifiedname>InStream::_tmpReadToken</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2017" column="17" bodyfile="src/testlib.h" bodystart="2017" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a47cff32cdacd0978f83382c6c81d7df4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int InStream::readManyIteration</definition>
        <argsstring></argsstring>
        <name>readManyIteration</name>
        <qualifiedname>InStream::readManyIteration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2019" column="9" bodyfile="src/testlib.h" bodystart="2019" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a14e6d7455706cea771265a7ab8407918" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t InStream::maxFileSize</definition>
        <argsstring></argsstring>
        <name>maxFileSize</name>
        <qualifiedname>InStream::maxFileSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2020" column="12" bodyfile="src/testlib.h" bodystart="2020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a4a4e8df78395f7be17d9429e7640eb26" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t InStream::maxTokenLength</definition>
        <argsstring></argsstring>
        <name>maxTokenLength</name>
        <qualifiedname>InStream::maxTokenLength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2021" column="12" bodyfile="src/testlib.h" bodystart="2021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a8ff983747e2b08a2f8f01d226b23f20a" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t InStream::maxMessageLength</definition>
        <argsstring></argsstring>
        <name>maxMessageLength</name>
        <qualifiedname>InStream::maxMessageLength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2022" column="12" bodyfile="src/testlib.h" bodystart="2022" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_in_stream_1af18bd290c3c3907be197c1878946c4d8" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int InStream::NO_INDEX</definition>
        <argsstring></argsstring>
        <name>NO_INDEX</name>
        <qualifiedname>InStream::NO_INDEX</qualifiedname>
        <initializer>= INT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2344" column="22" bodyfile="src/testlib.h" bodystart="2344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a582ee4c10e2543041466180e6134865a" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char InStream::OPEN_BRACKET</definition>
        <argsstring></argsstring>
        <name>OPEN_BRACKET</name>
        <qualifiedname>InStream::OPEN_BRACKET</qualifiedname>
        <initializer>= char(11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2345" column="23" bodyfile="src/testlib.h" bodystart="2345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a3b35e480ab8ea91b44cd8be3bf550fa8" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char InStream::CLOSE_BRACKET</definition>
        <argsstring></argsstring>
        <name>CLOSE_BRACKET</name>
        <qualifiedname>InStream::CLOSE_BRACKET</qualifiedname>
        <initializer>= char(17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2346" column="23" bodyfile="src/testlib.h" bodystart="2346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a2eb9f95d5c8ef82ec45295113294b836" prot="public" static="yes" mutable="no">
        <type>const <ref refid="testlib_8h_1a4cfc63e05db4883dc4b60a1245a9ffc5" kindref="member">WORD</ref></type>
        <definition>const WORD InStream::LightGray</definition>
        <argsstring></argsstring>
        <name>LightGray</name>
        <qualifiedname>InStream::LightGray</qualifiedname>
        <initializer>= 0x07</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2348" column="23" bodyfile="src/testlib.h" bodystart="2348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1aa2b66ca7098a63f267cdc650eda5b11c" prot="public" static="yes" mutable="no">
        <type>const <ref refid="testlib_8h_1a4cfc63e05db4883dc4b60a1245a9ffc5" kindref="member">WORD</ref></type>
        <definition>const WORD InStream::LightRed</definition>
        <argsstring></argsstring>
        <name>LightRed</name>
        <qualifiedname>InStream::LightRed</qualifiedname>
        <initializer>= 0x0c</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2349" column="23" bodyfile="src/testlib.h" bodystart="2349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a1906bb56c67bc1c4268903f37e2604a4" prot="public" static="yes" mutable="no">
        <type>const <ref refid="testlib_8h_1a4cfc63e05db4883dc4b60a1245a9ffc5" kindref="member">WORD</ref></type>
        <definition>const WORD InStream::LightCyan</definition>
        <argsstring></argsstring>
        <name>LightCyan</name>
        <qualifiedname>InStream::LightCyan</qualifiedname>
        <initializer>= 0x0b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2350" column="23" bodyfile="src/testlib.h" bodystart="2350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a088a42a5a342bf630b6288c308d276e3" prot="public" static="yes" mutable="no">
        <type>const <ref refid="testlib_8h_1a4cfc63e05db4883dc4b60a1245a9ffc5" kindref="member">WORD</ref></type>
        <definition>const WORD InStream::LightGreen</definition>
        <argsstring></argsstring>
        <name>LightGreen</name>
        <qualifiedname>InStream::LightGreen</qualifiedname>
        <initializer>= 0x0a</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2351" column="23" bodyfile="src/testlib.h" bodystart="2351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_in_stream_1a9dcd83240a933dee55e8195f6228ccad" prot="public" static="yes" mutable="no">
        <type>const <ref refid="testlib_8h_1a4cfc63e05db4883dc4b60a1245a9ffc5" kindref="member">WORD</ref></type>
        <definition>const WORD InStream::LightYellow</definition>
        <argsstring></argsstring>
        <name>LightYellow</name>
        <qualifiedname>InStream::LightYellow</qualifiedname>
        <initializer>= 0x0e</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2352" column="23" bodyfile="src/testlib.h" bodystart="2352" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_in_stream_1a6682d5e68cdbb92c667e6fc8e5e3c6dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InStream::InStream</definition>
        <argsstring>()</argsstring>
        <name>InStream</name>
        <qualifiedname>InStream::InStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2000" column="5" bodyfile="src/testlib.h" bodystart="2828" bodyend="2841"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ab75c26c4747d2a23388735cdfebbe4fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InStream::~InStream</definition>
        <argsstring>()</argsstring>
        <name>~InStream</name>
        <qualifiedname>InStream::~InStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2002" column="5" bodyfile="src/testlib.h" bodystart="2857" bodyend="2863"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a6f82f3399cf052c8b55d500feec79bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InStream::InStream</definition>
        <argsstring>(const InStream &amp;baseStream, std::string content)</argsstring>
        <name>InStream</name>
        <qualifiedname>InStream::InStream</qualifiedname>
        <param>
          <type>const <ref refid="struct_in_stream" kindref="compound">InStream</ref> &amp;</type>
          <declname>baseStream</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2005" column="5" bodyfile="src/testlib.h" bodystart="2843" bodyend="2855"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a249983cd8365347d249485c7840e3424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::init</definition>
        <argsstring>(std::string fileName, TMode mode)</argsstring>
        <name>init</name>
        <qualifiedname>InStream::init</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="testlib_8h_1ae73df2968f2f656074dc00e062600ddb" kindref="member">TMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2024" column="10" bodyfile="src/testlib.h" bodystart="3277" bodyend="3299"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a4b78654581508e7ace12cdda20de48df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::init</definition>
        <argsstring>(std::FILE *f, TMode mode)</argsstring>
        <name>init</name>
        <qualifiedname>InStream::init</qualifiedname>
        <param>
          <type>std::FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="testlib_8h_1ae73df2968f2f656074dc00e062600ddb" kindref="member">TMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2026" column="10" bodyfile="src/testlib.h" bodystart="3301" bodyend="3314"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a7e9ee69fe14cc6c19b059b384eebed5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::setTestCase</definition>
        <argsstring>(int testCase)</argsstring>
        <name>setTestCase</name>
        <qualifiedname>InStream::setTestCase</qualifiedname>
        <param>
          <type>int</type>
          <declname>testCase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2028" column="10" bodyfile="src/testlib.h" bodystart="2865" bodyend="2870"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ab88e3e00ca1111534d3d110166f275bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; InStream::getReadChars</definition>
        <argsstring>()</argsstring>
        <name>getReadChars</name>
        <qualifiedname>InStream::getReadChars</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2029" column="17" bodyfile="src/testlib.h" bodystart="2872" bodyend="2876"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a3caea7dc5003207a13b690e1e6523759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::skipBlanks</definition>
        <argsstring>()</argsstring>
        <name>skipBlanks</name>
        <qualifiedname>InStream::skipBlanks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2032" column="10" bodyfile="src/testlib.h" bodystart="3369" bodyend="3372"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1af208d97fa6484d10b88d611012fce578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char InStream::curChar</definition>
        <argsstring>()</argsstring>
        <name>curChar</name>
        <qualifiedname>InStream::curChar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2035" column="10" bodyfile="src/testlib.h" bodystart="3331" bodyend="3333"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a15dbd488971ba0da79085f7bd980f1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::skipChar</definition>
        <argsstring>()</argsstring>
        <name>skipChar</name>
        <qualifiedname>InStream::skipChar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2038" column="10" bodyfile="src/testlib.h" bodystart="3365" bodyend="3367"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1af46102c51b215e59e3b9e993ac999fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char InStream::nextChar</definition>
        <argsstring>()</argsstring>
        <name>nextChar</name>
        <qualifiedname>InStream::nextChar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2041" column="10" bodyfile="src/testlib.h" bodystart="3335" bodyend="3337"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1aa7711bdcca7b52181fd0f3072d935205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char InStream::readChar</definition>
        <argsstring>()</argsstring>
        <name>readChar</name>
        <qualifiedname>InStream::readChar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2044" column="10" bodyfile="src/testlib.h" bodystart="3339" bodyend="3341"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a0c49c9fe193752b77e17fc7e45b0965b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char InStream::readChar</definition>
        <argsstring>(char c)</argsstring>
        <name>readChar</name>
        <qualifiedname>InStream::readChar</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2047" column="10" bodyfile="src/testlib.h" bodystart="3343" bodyend="3355"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a012e968b18b359b82897db805faeb0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char InStream::readSpace</definition>
        <argsstring>()</argsstring>
        <name>readSpace</name>
        <qualifiedname>InStream::readSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2050" column="10" bodyfile="src/testlib.h" bodystart="3357" bodyend="3359"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a8c656e9ae7175e852033fbdffe41550b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::unreadChar</definition>
        <argsstring>(char c)</argsstring>
        <name>unreadChar</name>
        <qualifiedname>InStream::unreadChar</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2053" column="10" bodyfile="src/testlib.h" bodystart="3361" bodyend="3363"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a0daf92605da53c68648ad78572965ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::reset</definition>
        <argsstring>(std::FILE *file=NULL)</argsstring>
        <name>reset</name>
        <qualifiedname>InStream::reset</qualifiedname>
        <param>
          <type>std::FILE *</type>
          <declname>file</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2056" column="10" bodyfile="src/testlib.h" bodystart="3247" bodyend="3275"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a8c1f774508b47b9e80c76d37d268f6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InStream::eof</definition>
        <argsstring>()</argsstring>
        <name>eof</name>
        <qualifiedname>InStream::eof</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2059" column="10" bodyfile="src/testlib.h" bodystart="4154" bodyend="4159"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a2c7c8561462345e6ee18a0d8ea4bc00b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InStream::seekEof</definition>
        <argsstring>()</argsstring>
        <name>seekEof</name>
        <qualifiedname>InStream::seekEof</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2062" column="10" bodyfile="src/testlib.h" bodystart="4161" bodyend="4166"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ac54c356a099d9af022d59cdcd1b75bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InStream::eoln</definition>
        <argsstring>()</argsstring>
        <name>eoln</name>
        <qualifiedname>InStream::eoln</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2069" column="10" bodyfile="src/testlib.h" bodystart="4168" bodyend="4216"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a106d09bbdd844ca246bfbf2c6409f4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool InStream::seekEoln</definition>
        <argsstring>()</argsstring>
        <name>seekEoln</name>
        <qualifiedname>InStream::seekEoln</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2072" column="10" bodyfile="src/testlib.h" bodystart="4233" bodyend="4244"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a86e63a6bb9bc47cae9f58f0591ecc53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::nextLine</definition>
        <argsstring>()</argsstring>
        <name>nextLine</name>
        <qualifiedname>InStream::nextLine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2075" column="10" bodyfile="src/testlib.h" bodystart="4246" bodyend="4248"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a2d0d971de1cd2d7da01f7d6bb4f836a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readWord</definition>
        <argsstring>()</argsstring>
        <name>readWord</name>
        <qualifiedname>InStream::readWord</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2081" column="17" bodyfile="src/testlib.h" bodystart="3374" bodyend="3377"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1aab5bf73477536435d39efd209bf672d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readToken</definition>
        <argsstring>()</argsstring>
        <name>readToken</name>
        <qualifiedname>InStream::readToken</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2084" column="17" bodyfile="src/testlib.h" bodystart="3412" bodyend="3414"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a33a01a1ab403b91c58d630b2650f999e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readWord</definition>
        <argsstring>(const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readWord</name>
        <qualifiedname>InStream::readWord</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2087" column="17" bodyfile="src/testlib.h" bodystart="3495" bodyend="3497"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a7848236cb25239dc96ac1d01953116c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readWord</definition>
        <argsstring>(const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readWord</name>
        <qualifiedname>InStream::readWord</qualifiedname>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2089" column="17" bodyfile="src/testlib.h" bodystart="3457" bodyend="3482"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a05e78a1ad94e4ed2078daee8eeb7e2cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readWords</definition>
        <argsstring>(int size, const std::string &amp;ptrn, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readWords</name>
        <qualifiedname>InStream::readWords</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2092" column="5" bodyfile="src/testlib.h" bodystart="3500" bodyend="3505"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a0382d1f95cecf40e7c728c033c14123b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readWords</definition>
        <argsstring>(int size, const pattern &amp;p, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readWords</name>
        <qualifiedname>InStream::readWords</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2095" column="5" bodyfile="src/testlib.h" bodystart="3485" bodyend="3489"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1aaa61148d12958728cd443f21b2ed0aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readWords</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readWords</name>
        <qualifiedname>InStream::readWords</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2097" column="17" bodyfile="src/testlib.h" bodystart="3491" bodyend="3493"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a1551acb574a25586a2ba2ad594398e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readToken</definition>
        <argsstring>(const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readToken</name>
        <qualifiedname>InStream::readToken</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2100" column="17" bodyfile="src/testlib.h" bodystart="3522" bodyend="3524"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1aa7e276efc82ccd5bcefbfaf8f0391677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readToken</definition>
        <argsstring>(const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readToken</name>
        <qualifiedname>InStream::readToken</qualifiedname>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2102" column="17" bodyfile="src/testlib.h" bodystart="3507" bodyend="3509"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a0c556560eb05d89757fc854d38ae650b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readTokens</definition>
        <argsstring>(int size, const std::string &amp;ptrn, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readTokens</name>
        <qualifiedname>InStream::readTokens</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2105" column="5" bodyfile="src/testlib.h" bodystart="3527" bodyend="3532"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a5f2d2a617eed60c5a05872af6ece6855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readTokens</definition>
        <argsstring>(int size, const pattern &amp;p, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readTokens</name>
        <qualifiedname>InStream::readTokens</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2108" column="5" bodyfile="src/testlib.h" bodystart="3512" bodyend="3516"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a7b79dfec1ae85f251876f603751036d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readTokens</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readTokens</name>
        <qualifiedname>InStream::readTokens</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2110" column="17" bodyfile="src/testlib.h" bodystart="3518" bodyend="3520"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ace052a2f951135d3a7699c3824fbc4f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readWordTo</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>readWordTo</name>
        <qualifiedname>InStream::readWordTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2112" column="10" bodyfile="src/testlib.h" bodystart="3379" bodyend="3410"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1aae65d2db41677626fd5ffa446be65003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readWordTo</definition>
        <argsstring>(std::string &amp;result, const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readWordTo</name>
        <qualifiedname>InStream::readWordTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2114" column="10" bodyfile="src/testlib.h" bodystart="3534" bodyend="3546"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a78c7969db04a87aea6263c8563dc5c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readWordTo</definition>
        <argsstring>(std::string &amp;result, const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readWordTo</name>
        <qualifiedname>InStream::readWordTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2116" column="10" bodyfile="src/testlib.h" bodystart="3548" bodyend="3550"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a0512828fe7bc56a8fa2ddb4e0e6f2b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readTokenTo</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>readTokenTo</name>
        <qualifiedname>InStream::readTokenTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2118" column="10" bodyfile="src/testlib.h" bodystart="3416" bodyend="3418"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a6cc04d722a5e707b0450396c671c8732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readTokenTo</definition>
        <argsstring>(std::string &amp;result, const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readTokenTo</name>
        <qualifiedname>InStream::readTokenTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2120" column="10" bodyfile="src/testlib.h" bodystart="3552" bodyend="3554"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ac191b4317fc175b291cae1fa4fc7b399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readTokenTo</definition>
        <argsstring>(std::string &amp;result, const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readTokenTo</name>
        <qualifiedname>InStream::readTokenTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2122" column="10" bodyfile="src/testlib.h" bodystart="3556" bodyend="3558"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1af964fda2b145a8c8d25965b7ef4784cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long long</type>
        <definition>long long InStream::readLong</definition>
        <argsstring>()</argsstring>
        <name>readLong</name>
        <qualifiedname>InStream::readLong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2128" column="15" bodyfile="src/testlib.h" bodystart="3845" bodyend="3852"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a473c29087621184bb71998a12957e822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long</type>
        <definition>unsigned long long InStream::readUnsignedLong</definition>
        <argsstring>()</argsstring>
        <name>readUnsignedLong</name>
        <qualifiedname>InStream::readUnsignedLong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2130" column="24" bodyfile="src/testlib.h" bodystart="3854" bodyend="3861"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a68a75c1f359c0b3917a3922f4512da08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int InStream::readInteger</definition>
        <argsstring>()</argsstring>
        <name>readInteger</name>
        <qualifiedname>InStream::readInteger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2136" column="9" bodyfile="src/testlib.h" bodystart="3832" bodyend="3843"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int InStream::readInt</definition>
        <argsstring>()</argsstring>
        <name>readInt</name>
        <qualifiedname>InStream::readInt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2142" column="9" bodyfile="src/testlib.h" bodystart="3956" bodyend="3958"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a1398548ec0f156ddc9add251addb63c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long long</type>
        <definition>long long InStream::readLong</definition>
        <argsstring>(long long minv, long long maxv, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readLong</name>
        <qualifiedname>InStream::readLong</qualifiedname>
        <param>
          <type>long long</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>long long</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2145" column="15" bodyfile="src/testlib.h" bodystart="3863" bodyend="3892"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a469d95f96c09746781621480b74c5c83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; long long &gt;</type>
        <definition>std::vector&lt; long long &gt; InStream::readLongs</definition>
        <argsstring>(int size, long long minv, long long maxv, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readLongs</name>
        <qualifiedname>InStream::readLongs</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>long long</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>long long</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2149" column="5" bodyfile="src/testlib.h" bodystart="3895" bodyend="3899"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ab135bb75d235e57fea89a248acd51015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; long long &gt;</type>
        <definition>std::vector&lt; long long &gt; InStream::readLongs</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readLongs</name>
        <qualifiedname>InStream::readLongs</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2152" column="17" bodyfile="src/testlib.h" bodystart="3901" bodyend="3903"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ac168f51d536fd2fef12d6aa87ff5795f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long</type>
        <definition>unsigned long long InStream::readUnsignedLong</definition>
        <argsstring>(unsigned long long minv, unsigned long long maxv, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readUnsignedLong</name>
        <qualifiedname>InStream::readUnsignedLong</qualifiedname>
        <param>
          <type>unsigned long long</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2155" column="5" bodyfile="src/testlib.h" bodystart="3906" bodyend="3938"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a8c85a1d577aeb727bec09f362e3a395a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned long long &gt;</type>
        <definition>std::vector&lt; unsigned long long &gt; InStream::readUnsignedLongs</definition>
        <argsstring>(int size, unsigned long long minv, unsigned long long maxv, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readUnsignedLongs</name>
        <qualifiedname>InStream::readUnsignedLongs</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2158" column="5" bodyfile="src/testlib.h" bodystart="3940" bodyend="3945"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a5d3141608fafc3797171a3ea7627ec4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned long long &gt;</type>
        <definition>std::vector&lt; unsigned long long &gt; InStream::readUnsignedLongs</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readUnsignedLongs</name>
        <qualifiedname>InStream::readUnsignedLongs</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2161" column="17" bodyfile="src/testlib.h" bodystart="3947" bodyend="3949"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1aac4b9f822f2471eb19f89e3c0d78169b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long</type>
        <definition>unsigned long long InStream::readLong</definition>
        <argsstring>(unsigned long long minv, unsigned long long maxv, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readLong</name>
        <qualifiedname>InStream::readLong</qualifiedname>
        <param>
          <type>unsigned long long</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2163" column="24" bodyfile="src/testlib.h" bodystart="3952" bodyend="3954"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a9bd7a7d10db6d24401dfd3b421ed6045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned long long &gt;</type>
        <definition>std::vector&lt; unsigned long long &gt; InStream::readLongs</definition>
        <argsstring>(int size, unsigned long long minv, unsigned long long maxv, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readLongs</name>
        <qualifiedname>InStream::readLongs</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2166" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a789739800a5332fb69578d60fef57947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int InStream::readInteger</definition>
        <argsstring>(int minv, int maxv, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readInteger</name>
        <qualifiedname>InStream::readInteger</qualifiedname>
        <param>
          <type>int</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2170" column="9" bodyfile="src/testlib.h" bodystart="3991" bodyend="3993"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a0811e321fbb08005ef2dec953d6f3256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int InStream::readInt</definition>
        <argsstring>(int minv, int maxv, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readInt</name>
        <qualifiedname>InStream::readInt</qualifiedname>
        <param>
          <type>int</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2173" column="9" bodyfile="src/testlib.h" bodystart="3960" bodyend="3989"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1adb2af0baf6e9e6efa47a084719f0b2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; InStream::readIntegers</definition>
        <argsstring>(int size, int minv, int maxv, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readIntegers</name>
        <qualifiedname>InStream::readIntegers</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2177" column="5" bodyfile="src/testlib.h" bodystart="4005" bodyend="4009"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ab76c62ce0113ca54feb21c1bd61611cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; InStream::readIntegers</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readIntegers</name>
        <qualifiedname>InStream::readIntegers</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2180" column="17" bodyfile="src/testlib.h" bodystart="4011" bodyend="4013"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1afe94166e208381f17f49906ee5d50ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; InStream::readInts</definition>
        <argsstring>(int size, int minv, int maxv, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readInts</name>
        <qualifiedname>InStream::readInts</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2183" column="17" bodyfile="src/testlib.h" bodystart="3995" bodyend="3999"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a9dc7971488f79c36b0c039faac9a91b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; InStream::readInts</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readInts</name>
        <qualifiedname>InStream::readInts</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2186" column="17" bodyfile="src/testlib.h" bodystart="4001" bodyend="4003"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a147bef1aea6670fb8e2e6be97e76edc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double InStream::readReal</definition>
        <argsstring>()</argsstring>
        <name>readReal</name>
        <qualifiedname>InStream::readReal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2192" column="12" bodyfile="src/testlib.h" bodystart="4015" bodyend="4020"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a7409a09698273a264eaa9069ecf90abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double InStream::readDouble</definition>
        <argsstring>()</argsstring>
        <name>readDouble</name>
        <qualifiedname>InStream::readDouble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2198" column="12" bodyfile="src/testlib.h" bodystart="4022" bodyend="4024"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1afefbbd644f24959a3c0dca545c50ca8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double InStream::readReal</definition>
        <argsstring>(double minv, double maxv, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readReal</name>
        <qualifiedname>InStream::readReal</qualifiedname>
        <param>
          <type>double</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2201" column="12" bodyfile="src/testlib.h" bodystart="4026" bodyend="4058"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a6d4100230dab7762fc8a67889f0af48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; InStream::readReals</definition>
        <argsstring>(int size, double minv, double maxv, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readReals</name>
        <qualifiedname>InStream::readReals</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2204" column="5" bodyfile="src/testlib.h" bodystart="4061" bodyend="4065"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a30e0fec1354eccc823c46fb2decb6a5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; InStream::readReals</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readReals</name>
        <qualifiedname>InStream::readReals</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2206" column="17" bodyfile="src/testlib.h" bodystart="4067" bodyend="4069"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a477dc26871b7cbb20c2d3c5aa7f51a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double InStream::readDouble</definition>
        <argsstring>(double minv, double maxv, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readDouble</name>
        <qualifiedname>InStream::readDouble</qualifiedname>
        <param>
          <type>double</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2209" column="12" bodyfile="src/testlib.h" bodystart="4071" bodyend="4073"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1aee88ed3c11ec6eb9d1d73053e6766e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; InStream::readDoubles</definition>
        <argsstring>(int size, double minv, double maxv, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readDoubles</name>
        <qualifiedname>InStream::readDoubles</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2212" column="5" bodyfile="src/testlib.h" bodystart="4076" bodyend="4080"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a9be66f81b7039ccdc58bee885ee15278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; InStream::readDoubles</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readDoubles</name>
        <qualifiedname>InStream::readDoubles</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2214" column="17" bodyfile="src/testlib.h" bodystart="4082" bodyend="4084"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1af4a862c387cf199c075896c046b3038b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double InStream::readStrictReal</definition>
        <argsstring>(double minv, double maxv, int minAfterPointDigitCount, int maxAfterPointDigitCount, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readStrictReal</name>
        <qualifiedname>InStream::readStrictReal</qualifiedname>
        <param>
          <type>double</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minAfterPointDigitCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxAfterPointDigitCount</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2221" column="12" bodyfile="src/testlib.h" bodystart="4086" bodyend="4124"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a05d7a1183338770dd288298e6f4378c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; InStream::readStrictReals</definition>
        <argsstring>(int size, double minv, double maxv, int minAfterPointDigitCount, int maxAfterPointDigitCount, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readStrictReals</name>
        <qualifiedname>InStream::readStrictReals</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minAfterPointDigitCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxAfterPointDigitCount</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2225" column="17" bodyfile="src/testlib.h" bodystart="4126" bodyend="4134"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1aaecf640ad9de7cf1873b2bc216e32b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double InStream::readStrictDouble</definition>
        <argsstring>(double minv, double maxv, int minAfterPointDigitCount, int maxAfterPointDigitCount, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readStrictDouble</name>
        <qualifiedname>InStream::readStrictDouble</qualifiedname>
        <param>
          <type>double</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minAfterPointDigitCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxAfterPointDigitCount</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2234" column="12" bodyfile="src/testlib.h" bodystart="4136" bodyend="4142"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1af2689fbf7c65b80728826fcb4230163f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; InStream::readStrictDoubles</definition>
        <argsstring>(int size, double minv, double maxv, int minAfterPointDigitCount, int maxAfterPointDigitCount, const std::string &amp;variablesName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readStrictDoubles</name>
        <qualifiedname>InStream::readStrictDoubles</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minAfterPointDigitCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxAfterPointDigitCount</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2238" column="17" bodyfile="src/testlib.h" bodystart="4144" bodyend="4152"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a6e45ce9c44925056ec1db59400012c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readString</definition>
        <argsstring>()</argsstring>
        <name>readString</name>
        <qualifiedname>InStream::readString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2243" column="17" bodyfile="src/testlib.h" bodystart="4280" bodyend="4283"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a2cba4bd119b24d1af9c70ce238b2fbd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readStrings</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readStrings</name>
        <qualifiedname>InStream::readStrings</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2246" column="17" bodyfile="src/testlib.h" bodystart="4285" bodyend="4287"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a79fc60da4d122afd8c8f6f76c1b7fa56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readStringTo</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>readStringTo</name>
        <qualifiedname>InStream::readStringTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2249" column="10" bodyfile="src/testlib.h" bodystart="4250" bodyend="4278"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a25e0a8a1aef084955346a2b82cefa3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readString</definition>
        <argsstring>(const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readString</name>
        <qualifiedname>InStream::readString</qualifiedname>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2252" column="17" bodyfile="src/testlib.h" bodystart="4318" bodyend="4321"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a5d4fd12c9b43f1357e56aed051524f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readString</definition>
        <argsstring>(const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readString</name>
        <qualifiedname>InStream::readString</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2255" column="17" bodyfile="src/testlib.h" bodystart="4330" bodyend="4333"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a7566b33af0c853ce8ddfcdd7ad0e9648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readStrings</definition>
        <argsstring>(int size, const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readStrings</name>
        <qualifiedname>InStream::readStrings</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2259" column="5" bodyfile="src/testlib.h" bodystart="4324" bodyend="4328"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a826426f9c306ac53747a3141f819a1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readStrings</definition>
        <argsstring>(int size, const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readStrings</name>
        <qualifiedname>InStream::readStrings</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2263" column="5" bodyfile="src/testlib.h" bodystart="4336" bodyend="4341"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a6dd7e7971417eadfc7c89ed6063ee166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readStringTo</definition>
        <argsstring>(std::string &amp;result, const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readStringTo</name>
        <qualifiedname>InStream::readStringTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2266" column="10" bodyfile="src/testlib.h" bodystart="4289" bodyend="4312"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a90443a86a3a04208af259dbca2061b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readStringTo</definition>
        <argsstring>(std::string &amp;result, const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readStringTo</name>
        <qualifiedname>InStream::readStringTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2269" column="10" bodyfile="src/testlib.h" bodystart="4314" bodyend="4316"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1abd0f6cb6707dc00014499a12db9e7683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readLine</definition>
        <argsstring>()</argsstring>
        <name>readLine</name>
        <qualifiedname>InStream::readLine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2275" column="17" bodyfile="src/testlib.h" bodystart="4347" bodyend="4349"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a2815b773083f56cf836e3669cf467e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readLines</definition>
        <argsstring>(int size, int indexBase=1)</argsstring>
        <name>readLines</name>
        <qualifiedname>InStream::readLines</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2278" column="17" bodyfile="src/testlib.h" bodystart="4351" bodyend="4353"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a3827b74ce0965b2b080319e24fa7a447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readLineTo</definition>
        <argsstring>(std::string &amp;result)</argsstring>
        <name>readLineTo</name>
        <qualifiedname>InStream::readLineTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2281" column="10" bodyfile="src/testlib.h" bodystart="4343" bodyend="4345"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a6d9a21120d8b21cf31e9bad2a1e83e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readLine</definition>
        <argsstring>(const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readLine</name>
        <qualifiedname>InStream::readLine</qualifiedname>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2284" column="17" bodyfile="src/testlib.h" bodystart="4363" bodyend="4365"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a4fd055a2face33d5862f23ee9cb86cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string InStream::readLine</definition>
        <argsstring>(const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readLine</name>
        <qualifiedname>InStream::readLine</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2287" column="17" bodyfile="src/testlib.h" bodystart="4374" bodyend="4376"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a1ce8d0614039ae608612cca5d4fc5f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readLines</definition>
        <argsstring>(int size, const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readLines</name>
        <qualifiedname>InStream::readLines</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2291" column="5" bodyfile="src/testlib.h" bodystart="4368" bodyend="4372"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a5f62d4bb591a6de0a04cc8cc8a876202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; InStream::readLines</definition>
        <argsstring>(int size, const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;, int indexBase=1)</argsstring>
        <name>readLines</name>
        <qualifiedname>InStream::readLines</qualifiedname>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2295" column="5" bodyfile="src/testlib.h" bodystart="4379" bodyend="4384"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a15203cdc5616988c0b76e8652ec05cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readLineTo</definition>
        <argsstring>(std::string &amp;result, const pattern &amp;p, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readLineTo</name>
        <qualifiedname>InStream::readLineTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="classpattern" kindref="compound">pattern</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2298" column="10" bodyfile="src/testlib.h" bodystart="4355" bodyend="4357"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a727fea17af0013a7a6089734292abd24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readLineTo</definition>
        <argsstring>(std::string &amp;result, const std::string &amp;ptrn, const std::string &amp;variableName=&quot;&quot;)</argsstring>
        <name>readLineTo</name>
        <qualifiedname>InStream::readLineTo</qualifiedname>
        <param>
          <type>std::string &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ptrn</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2301" column="10" bodyfile="src/testlib.h" bodystart="4359" bodyend="4361"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a034c0ee97269f7bbd1e73ccc85b13f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readEoln</definition>
        <argsstring>()</argsstring>
        <name>readEoln</name>
        <qualifiedname>InStream::readEoln</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2304" column="10" bodyfile="src/testlib.h" bodystart="4218" bodyend="4222"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a80e53f1d7a022f34f8d88839de43d6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::readEof</definition>
        <argsstring>()</argsstring>
        <name>readEof</name>
        <qualifiedname>InStream::readEof</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2307" column="10" bodyfile="src/testlib.h" bodystart="4224" bodyend="4231"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a95bee5abfce70b5e663359558080ada9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="testlib_8h_1aa1728270d73c5d1598de1fd691762eb1" kindref="member">NORETURN</ref> void</type>
        <definition>NORETURN void InStream::quit</definition>
        <argsstring>(TResult result, const char *msg)</argsstring>
        <name>quit</name>
        <qualifiedname>InStream::quit</qualifiedname>
        <param>
          <type><ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578" kindref="member">TResult</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2313" column="19" bodyfile="src/testlib.h" bodystart="3046" bodyend="3184"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a3238a2d2a6fdb963d8f7c57416b5c1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="testlib_8h_1aa1728270d73c5d1598de1fd691762eb1" kindref="member">NORETURN</ref> void</type>
        <definition>NORETURN void InStream::quitf</definition>
        <argsstring>(TResult result, const char *msg,...)</argsstring>
        <name>quitf</name>
        <qualifiedname>InStream::quitf</qualifiedname>
        <param>
          <type><ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578" kindref="member">TResult</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2318" column="19" bodyfile="src/testlib.h" bodystart="3189" bodyend="3192"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a0c969f83376d50af370615d44186647d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::quitif</definition>
        <argsstring>(bool condition, TResult result, const char *msg,...)</argsstring>
        <name>quitif</name>
        <qualifiedname>InStream::quitif</qualifiedname>
        <param>
          <type>bool</type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578" kindref="member">TResult</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2324" column="10" bodyfile="src/testlib.h" bodystart="3197" bodyend="3202"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a65a8b22fb500b96357ad5630535ebb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="testlib_8h_1aa1728270d73c5d1598de1fd691762eb1" kindref="member">NORETURN</ref> void</type>
        <definition>NORETURN void InStream::quits</definition>
        <argsstring>(TResult result, std::string msg)</argsstring>
        <name>quits</name>
        <qualifiedname>InStream::quits</qualifiedname>
        <param>
          <type><ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578" kindref="member">TResult</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2329" column="19" bodyfile="src/testlib.h" bodystart="3204" bodyend="3206"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a44a5027f6d7000c62ef27c6719f225ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::ensuref</definition>
        <argsstring>(bool cond, const char *format,...)</argsstring>
        <name>ensuref</name>
        <qualifiedname>InStream::ensuref</qualifiedname>
        <param>
          <type>bool</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2338" column="10" bodyfile="src/testlib.h" bodystart="4389" bodyend="4394"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ad961f49275f9e4d97b3ab6691f4b3d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::__testlib_ensure</definition>
        <argsstring>(bool cond, std::string message)</argsstring>
        <name>__testlib_ensure</name>
        <qualifiedname>InStream::__testlib_ensure</qualifiedname>
        <param>
          <type>bool</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2340" column="10" bodyfile="src/testlib.h" bodystart="4396" bodyend="4399"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a4e6d2f97680cbc53de0d6cb1a893016f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <qualifiedname>InStream::close</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2342" column="10" bodyfile="src/testlib.h" bodystart="4401" bodyend="4409"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a7920954e072895d70f2127ccc7af789d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::xmlSafeWrite</definition>
        <argsstring>(std::FILE *file, const char *msg)</argsstring>
        <name>xmlSafeWrite</name>
        <qualifiedname>InStream::xmlSafeWrite</qualifiedname>
        <param>
          <type>std::FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2360" column="10" bodyfile="src/testlib.h" bodystart="3208" bodyend="3233"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a1ee5c101df11ec9fe00867379bf3937f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::skipBom</definition>
        <argsstring>()</argsstring>
        <name>skipBom</name>
        <qualifiedname>InStream::skipBom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2363" column="10" bodyfile="src/testlib.h" bodystart="3316" bodyend="3329"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_in_stream_1a4ff4b2110a80dea66154702116080e49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::textColor</definition>
        <argsstring>(WORD color)</argsstring>
        <name>textColor</name>
        <qualifiedname>InStream::textColor</qualifiedname>
        <param>
          <type><ref refid="testlib_8h_1a4cfc63e05db4883dc4b60a1245a9ffc5" kindref="member">WORD</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2354" column="17" bodyfile="src/testlib.h" bodystart="2924" bodyend="2957"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1a681c59fb45459a1247d0bb237eb196eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::quitscr</definition>
        <argsstring>(WORD color, const char *msg)</argsstring>
        <name>quitscr</name>
        <qualifiedname>InStream::quitscr</qualifiedname>
        <param>
          <type><ref refid="testlib_8h_1a4cfc63e05db4883dc4b60a1245a9ffc5" kindref="member">WORD</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2356" column="17" bodyfile="src/testlib.h" bodystart="3239" bodyend="3245"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1ac1ca7d4baa1a28a7de0995a2581841b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InStream::quitscrS</definition>
        <argsstring>(WORD color, std::string msg)</argsstring>
        <name>quitscrS</name>
        <qualifiedname>InStream::quitscrS</qualifiedname>
        <param>
          <type><ref refid="testlib_8h_1a4cfc63e05db4883dc4b60a1245a9ffc5" kindref="member">WORD</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2358" column="17" bodyfile="src/testlib.h" bodystart="3235" bodyend="3237"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_in_stream_1aaf3538c328154982b19d1820fad09d95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>InStream::InStream</definition>
        <argsstring>(const InStream &amp;)</argsstring>
        <name>InStream</name>
        <qualifiedname>InStream::InStream</qualifiedname>
        <param>
          <type>const <ref refid="struct_in_stream" kindref="compound">InStream</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2366" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_in_stream_1abd94559d04720cfdee17f9fd84f9694b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_in_stream" kindref="compound">InStream</ref> &amp;</type>
        <definition>InStream &amp; InStream::operator=</definition>
        <argsstring>(const InStream &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>InStream::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_in_stream" kindref="compound">InStream</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testlib.h" line="2368" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>InStream</label>
        <link refid="struct_in_stream"/>
        <childnode refid="2" relation="usage">
          <edgelabel>reader</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>InputStreamReader</label>
        <link refid="class_input_stream_reader"/>
      </node>
    </collaborationgraph>
    <location file="src/testlib.h" line="1998" column="1" bodyfile="src/testlib.h" bodystart="1998" bodyend="2369"/>
    <listofallmembers>
      <member refid="struct_in_stream_1ad961f49275f9e4d97b3ab6691f4b3d07" prot="public" virt="non-virtual"><scope>InStream</scope><name>__testlib_ensure</name></member>
      <member refid="struct_in_stream_1af2f09659cea3fd78f1e662cd918d2c30" prot="public" virt="non-virtual"><scope>InStream</scope><name>_tmpReadToken</name></member>
      <member refid="struct_in_stream_1a4e6d2f97680cbc53de0d6cb1a893016f" prot="public" virt="non-virtual"><scope>InStream</scope><name>close</name></member>
      <member refid="struct_in_stream_1a3b35e480ab8ea91b44cd8be3bf550fa8" prot="public" virt="non-virtual"><scope>InStream</scope><name>CLOSE_BRACKET</name></member>
      <member refid="struct_in_stream_1af208d97fa6484d10b88d611012fce578" prot="public" virt="non-virtual"><scope>InStream</scope><name>curChar</name></member>
      <member refid="struct_in_stream_1a44a5027f6d7000c62ef27c6719f225ef" prot="public" virt="non-virtual"><scope>InStream</scope><name>ensuref</name></member>
      <member refid="struct_in_stream_1a8c1f774508b47b9e80c76d37d268f6f4" prot="public" virt="non-virtual"><scope>InStream</scope><name>eof</name></member>
      <member refid="struct_in_stream_1ac54c356a099d9af022d59cdcd1b75bcd" prot="public" virt="non-virtual"><scope>InStream</scope><name>eoln</name></member>
      <member refid="struct_in_stream_1ab88e3e00ca1111534d3d110166f275bd" prot="public" virt="non-virtual"><scope>InStream</scope><name>getReadChars</name></member>
      <member refid="struct_in_stream_1a249983cd8365347d249485c7840e3424" prot="public" virt="non-virtual"><scope>InStream</scope><name>init</name></member>
      <member refid="struct_in_stream_1a4b78654581508e7ace12cdda20de48df" prot="public" virt="non-virtual"><scope>InStream</scope><name>init</name></member>
      <member refid="struct_in_stream_1a6682d5e68cdbb92c667e6fc8e5e3c6dd" prot="public" virt="non-virtual"><scope>InStream</scope><name>InStream</name></member>
      <member refid="struct_in_stream_1a6f82f3399cf052c8b55d500feec79bd2" prot="public" virt="non-virtual"><scope>InStream</scope><name>InStream</name></member>
      <member refid="struct_in_stream_1aaf3538c328154982b19d1820fad09d95" prot="private" virt="non-virtual"><scope>InStream</scope><name>InStream</name></member>
      <member refid="struct_in_stream_1a2e44f54a6f11bf8337e742ec131ac0b5" prot="public" virt="non-virtual"><scope>InStream</scope><name>lastLine</name></member>
      <member refid="struct_in_stream_1a1906bb56c67bc1c4268903f37e2604a4" prot="public" virt="non-virtual"><scope>InStream</scope><name>LightCyan</name></member>
      <member refid="struct_in_stream_1a2eb9f95d5c8ef82ec45295113294b836" prot="public" virt="non-virtual"><scope>InStream</scope><name>LightGray</name></member>
      <member refid="struct_in_stream_1a088a42a5a342bf630b6288c308d276e3" prot="public" virt="non-virtual"><scope>InStream</scope><name>LightGreen</name></member>
      <member refid="struct_in_stream_1aa2b66ca7098a63f267cdc650eda5b11c" prot="public" virt="non-virtual"><scope>InStream</scope><name>LightRed</name></member>
      <member refid="struct_in_stream_1a9dcd83240a933dee55e8195f6228ccad" prot="public" virt="non-virtual"><scope>InStream</scope><name>LightYellow</name></member>
      <member refid="struct_in_stream_1a14e6d7455706cea771265a7ab8407918" prot="public" virt="non-virtual"><scope>InStream</scope><name>maxFileSize</name></member>
      <member refid="struct_in_stream_1a8ff983747e2b08a2f8f01d226b23f20a" prot="public" virt="non-virtual"><scope>InStream</scope><name>maxMessageLength</name></member>
      <member refid="struct_in_stream_1a4a4e8df78395f7be17d9429e7640eb26" prot="public" virt="non-virtual"><scope>InStream</scope><name>maxTokenLength</name></member>
      <member refid="struct_in_stream_1a22c9fbb12ed6da923353c3a477881686" prot="public" virt="non-virtual"><scope>InStream</scope><name>mode</name></member>
      <member refid="struct_in_stream_1a0e45bfde029064fc64c36c1462e6ba8b" prot="public" virt="non-virtual"><scope>InStream</scope><name>name</name></member>
      <member refid="struct_in_stream_1af46102c51b215e59e3b9e993ac999fe5" prot="public" virt="non-virtual"><scope>InStream</scope><name>nextChar</name></member>
      <member refid="struct_in_stream_1a86e63a6bb9bc47cae9f58f0591ecc53f" prot="public" virt="non-virtual"><scope>InStream</scope><name>nextLine</name></member>
      <member refid="struct_in_stream_1af18bd290c3c3907be197c1878946c4d8" prot="public" virt="non-virtual"><scope>InStream</scope><name>NO_INDEX</name></member>
      <member refid="struct_in_stream_1a582ee4c10e2543041466180e6134865a" prot="public" virt="non-virtual"><scope>InStream</scope><name>OPEN_BRACKET</name></member>
      <member refid="struct_in_stream_1ac1db0153031be42e22117179c7cc70bf" prot="public" virt="non-virtual"><scope>InStream</scope><name>opened</name></member>
      <member refid="struct_in_stream_1abd94559d04720cfdee17f9fd84f9694b" prot="private" virt="non-virtual"><scope>InStream</scope><name>operator=</name></member>
      <member refid="struct_in_stream_1a95bee5abfce70b5e663359558080ada9" prot="public" virt="non-virtual"><scope>InStream</scope><name>quit</name></member>
      <member refid="struct_in_stream_1a3238a2d2a6fdb963d8f7c57416b5c1e5" prot="public" virt="non-virtual"><scope>InStream</scope><name>quitf</name></member>
      <member refid="struct_in_stream_1a0c969f83376d50af370615d44186647d" prot="public" virt="non-virtual"><scope>InStream</scope><name>quitif</name></member>
      <member refid="struct_in_stream_1a65a8b22fb500b96357ad5630535ebb95" prot="public" virt="non-virtual"><scope>InStream</scope><name>quits</name></member>
      <member refid="struct_in_stream_1a681c59fb45459a1247d0bb237eb196eb" prot="public" virt="non-virtual"><scope>InStream</scope><name>quitscr</name></member>
      <member refid="struct_in_stream_1ac1ca7d4baa1a28a7de0995a2581841b5" prot="public" virt="non-virtual"><scope>InStream</scope><name>quitscrS</name></member>
      <member refid="struct_in_stream_1aa7711bdcca7b52181fd0f3072d935205" prot="public" virt="non-virtual"><scope>InStream</scope><name>readChar</name></member>
      <member refid="struct_in_stream_1a0c49c9fe193752b77e17fc7e45b0965b" prot="public" virt="non-virtual"><scope>InStream</scope><name>readChar</name></member>
      <member refid="struct_in_stream_1a7409a09698273a264eaa9069ecf90abf" prot="public" virt="non-virtual"><scope>InStream</scope><name>readDouble</name></member>
      <member refid="struct_in_stream_1a477dc26871b7cbb20c2d3c5aa7f51a8f" prot="public" virt="non-virtual"><scope>InStream</scope><name>readDouble</name></member>
      <member refid="struct_in_stream_1aee88ed3c11ec6eb9d1d73053e6766e8e" prot="public" virt="non-virtual"><scope>InStream</scope><name>readDoubles</name></member>
      <member refid="struct_in_stream_1a9be66f81b7039ccdc58bee885ee15278" prot="public" virt="non-virtual"><scope>InStream</scope><name>readDoubles</name></member>
      <member refid="struct_in_stream_1a80e53f1d7a022f34f8d88839de43d6b5" prot="public" virt="non-virtual"><scope>InStream</scope><name>readEof</name></member>
      <member refid="struct_in_stream_1a034c0ee97269f7bbd1e73ccc85b13f54" prot="public" virt="non-virtual"><scope>InStream</scope><name>readEoln</name></member>
      <member refid="struct_in_stream_1ab970f7b2a0f0a699c6f3187f5b565c35" prot="public" virt="non-virtual"><scope>InStream</scope><name>reader</name></member>
      <member refid="struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38" prot="public" virt="non-virtual"><scope>InStream</scope><name>readInt</name></member>
      <member refid="struct_in_stream_1a0811e321fbb08005ef2dec953d6f3256" prot="public" virt="non-virtual"><scope>InStream</scope><name>readInt</name></member>
      <member refid="struct_in_stream_1a68a75c1f359c0b3917a3922f4512da08" prot="public" virt="non-virtual"><scope>InStream</scope><name>readInteger</name></member>
      <member refid="struct_in_stream_1a789739800a5332fb69578d60fef57947" prot="public" virt="non-virtual"><scope>InStream</scope><name>readInteger</name></member>
      <member refid="struct_in_stream_1adb2af0baf6e9e6efa47a084719f0b2ea" prot="public" virt="non-virtual"><scope>InStream</scope><name>readIntegers</name></member>
      <member refid="struct_in_stream_1ab76c62ce0113ca54feb21c1bd61611cf" prot="public" virt="non-virtual"><scope>InStream</scope><name>readIntegers</name></member>
      <member refid="struct_in_stream_1afe94166e208381f17f49906ee5d50ae1" prot="public" virt="non-virtual"><scope>InStream</scope><name>readInts</name></member>
      <member refid="struct_in_stream_1a9dc7971488f79c36b0c039faac9a91b1" prot="public" virt="non-virtual"><scope>InStream</scope><name>readInts</name></member>
      <member refid="struct_in_stream_1abd0f6cb6707dc00014499a12db9e7683" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLine</name></member>
      <member refid="struct_in_stream_1a6d9a21120d8b21cf31e9bad2a1e83e92" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLine</name></member>
      <member refid="struct_in_stream_1a4fd055a2face33d5862f23ee9cb86cd5" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLine</name></member>
      <member refid="struct_in_stream_1a2815b773083f56cf836e3669cf467e1a" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLines</name></member>
      <member refid="struct_in_stream_1a1ce8d0614039ae608612cca5d4fc5f28" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLines</name></member>
      <member refid="struct_in_stream_1a5f62d4bb591a6de0a04cc8cc8a876202" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLines</name></member>
      <member refid="struct_in_stream_1a3827b74ce0965b2b080319e24fa7a447" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLineTo</name></member>
      <member refid="struct_in_stream_1a15203cdc5616988c0b76e8652ec05cb7" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLineTo</name></member>
      <member refid="struct_in_stream_1a727fea17af0013a7a6089734292abd24" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLineTo</name></member>
      <member refid="struct_in_stream_1af964fda2b145a8c8d25965b7ef4784cd" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLong</name></member>
      <member refid="struct_in_stream_1a1398548ec0f156ddc9add251addb63c4" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLong</name></member>
      <member refid="struct_in_stream_1aac4b9f822f2471eb19f89e3c0d78169b" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLong</name></member>
      <member refid="struct_in_stream_1a469d95f96c09746781621480b74c5c83" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLongs</name></member>
      <member refid="struct_in_stream_1ab135bb75d235e57fea89a248acd51015" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLongs</name></member>
      <member refid="struct_in_stream_1a9bd7a7d10db6d24401dfd3b421ed6045" prot="public" virt="non-virtual"><scope>InStream</scope><name>readLongs</name></member>
      <member refid="struct_in_stream_1a47cff32cdacd0978f83382c6c81d7df4" prot="public" virt="non-virtual"><scope>InStream</scope><name>readManyIteration</name></member>
      <member refid="struct_in_stream_1a147bef1aea6670fb8e2e6be97e76edc2" prot="public" virt="non-virtual"><scope>InStream</scope><name>readReal</name></member>
      <member refid="struct_in_stream_1afefbbd644f24959a3c0dca545c50ca8d" prot="public" virt="non-virtual"><scope>InStream</scope><name>readReal</name></member>
      <member refid="struct_in_stream_1a6d4100230dab7762fc8a67889f0af48b" prot="public" virt="non-virtual"><scope>InStream</scope><name>readReals</name></member>
      <member refid="struct_in_stream_1a30e0fec1354eccc823c46fb2decb6a5d" prot="public" virt="non-virtual"><scope>InStream</scope><name>readReals</name></member>
      <member refid="struct_in_stream_1a012e968b18b359b82897db805faeb0f6" prot="public" virt="non-virtual"><scope>InStream</scope><name>readSpace</name></member>
      <member refid="struct_in_stream_1aaecf640ad9de7cf1873b2bc216e32b47" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStrictDouble</name></member>
      <member refid="struct_in_stream_1af2689fbf7c65b80728826fcb4230163f" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStrictDoubles</name></member>
      <member refid="struct_in_stream_1af4a862c387cf199c075896c046b3038b" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStrictReal</name></member>
      <member refid="struct_in_stream_1a05d7a1183338770dd288298e6f4378c7" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStrictReals</name></member>
      <member refid="struct_in_stream_1a6e45ce9c44925056ec1db59400012c3d" prot="public" virt="non-virtual"><scope>InStream</scope><name>readString</name></member>
      <member refid="struct_in_stream_1a25e0a8a1aef084955346a2b82cefa3b3" prot="public" virt="non-virtual"><scope>InStream</scope><name>readString</name></member>
      <member refid="struct_in_stream_1a5d4fd12c9b43f1357e56aed051524f7d" prot="public" virt="non-virtual"><scope>InStream</scope><name>readString</name></member>
      <member refid="struct_in_stream_1a2cba4bd119b24d1af9c70ce238b2fbd6" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStrings</name></member>
      <member refid="struct_in_stream_1a7566b33af0c853ce8ddfcdd7ad0e9648" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStrings</name></member>
      <member refid="struct_in_stream_1a826426f9c306ac53747a3141f819a1c7" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStrings</name></member>
      <member refid="struct_in_stream_1a79fc60da4d122afd8c8f6f76c1b7fa56" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStringTo</name></member>
      <member refid="struct_in_stream_1a6dd7e7971417eadfc7c89ed6063ee166" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStringTo</name></member>
      <member refid="struct_in_stream_1a90443a86a3a04208af259dbca2061b3b" prot="public" virt="non-virtual"><scope>InStream</scope><name>readStringTo</name></member>
      <member refid="struct_in_stream_1aab5bf73477536435d39efd209bf672d0" prot="public" virt="non-virtual"><scope>InStream</scope><name>readToken</name></member>
      <member refid="struct_in_stream_1a1551acb574a25586a2ba2ad594398e8c" prot="public" virt="non-virtual"><scope>InStream</scope><name>readToken</name></member>
      <member refid="struct_in_stream_1aa7e276efc82ccd5bcefbfaf8f0391677" prot="public" virt="non-virtual"><scope>InStream</scope><name>readToken</name></member>
      <member refid="struct_in_stream_1a0c556560eb05d89757fc854d38ae650b" prot="public" virt="non-virtual"><scope>InStream</scope><name>readTokens</name></member>
      <member refid="struct_in_stream_1a5f2d2a617eed60c5a05872af6ece6855" prot="public" virt="non-virtual"><scope>InStream</scope><name>readTokens</name></member>
      <member refid="struct_in_stream_1a7b79dfec1ae85f251876f603751036d9" prot="public" virt="non-virtual"><scope>InStream</scope><name>readTokens</name></member>
      <member refid="struct_in_stream_1a0512828fe7bc56a8fa2ddb4e0e6f2b72" prot="public" virt="non-virtual"><scope>InStream</scope><name>readTokenTo</name></member>
      <member refid="struct_in_stream_1a6cc04d722a5e707b0450396c671c8732" prot="public" virt="non-virtual"><scope>InStream</scope><name>readTokenTo</name></member>
      <member refid="struct_in_stream_1ac191b4317fc175b291cae1fa4fc7b399" prot="public" virt="non-virtual"><scope>InStream</scope><name>readTokenTo</name></member>
      <member refid="struct_in_stream_1a473c29087621184bb71998a12957e822" prot="public" virt="non-virtual"><scope>InStream</scope><name>readUnsignedLong</name></member>
      <member refid="struct_in_stream_1ac168f51d536fd2fef12d6aa87ff5795f" prot="public" virt="non-virtual"><scope>InStream</scope><name>readUnsignedLong</name></member>
      <member refid="struct_in_stream_1a8c85a1d577aeb727bec09f362e3a395a" prot="public" virt="non-virtual"><scope>InStream</scope><name>readUnsignedLongs</name></member>
      <member refid="struct_in_stream_1a5d3141608fafc3797171a3ea7627ec4d" prot="public" virt="non-virtual"><scope>InStream</scope><name>readUnsignedLongs</name></member>
      <member refid="struct_in_stream_1a2d0d971de1cd2d7da01f7d6bb4f836a3" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWord</name></member>
      <member refid="struct_in_stream_1a33a01a1ab403b91c58d630b2650f999e" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWord</name></member>
      <member refid="struct_in_stream_1a7848236cb25239dc96ac1d01953116c9" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWord</name></member>
      <member refid="struct_in_stream_1a05e78a1ad94e4ed2078daee8eeb7e2cf" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWords</name></member>
      <member refid="struct_in_stream_1a0382d1f95cecf40e7c728c033c14123b" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWords</name></member>
      <member refid="struct_in_stream_1aaa61148d12958728cd443f21b2ed0aa3" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWords</name></member>
      <member refid="struct_in_stream_1ace052a2f951135d3a7699c3824fbc4f7" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWordTo</name></member>
      <member refid="struct_in_stream_1aae65d2db41677626fd5ffa446be65003" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWordTo</name></member>
      <member refid="struct_in_stream_1a78c7969db04a87aea6263c8563dc5c93" prot="public" virt="non-virtual"><scope>InStream</scope><name>readWordTo</name></member>
      <member refid="struct_in_stream_1a0daf92605da53c68648ad78572965ca3" prot="public" virt="non-virtual"><scope>InStream</scope><name>reset</name></member>
      <member refid="struct_in_stream_1a2c7c8561462345e6ee18a0d8ea4bc00b" prot="public" virt="non-virtual"><scope>InStream</scope><name>seekEof</name></member>
      <member refid="struct_in_stream_1a106d09bbdd844ca246bfbf2c6409f4b6" prot="public" virt="non-virtual"><scope>InStream</scope><name>seekEoln</name></member>
      <member refid="struct_in_stream_1a7e9ee69fe14cc6c19b059b384eebed5c" prot="public" virt="non-virtual"><scope>InStream</scope><name>setTestCase</name></member>
      <member refid="struct_in_stream_1a3caea7dc5003207a13b690e1e6523759" prot="public" virt="non-virtual"><scope>InStream</scope><name>skipBlanks</name></member>
      <member refid="struct_in_stream_1a1ee5c101df11ec9fe00867379bf3937f" prot="public" virt="non-virtual"><scope>InStream</scope><name>skipBom</name></member>
      <member refid="struct_in_stream_1a15dbd488971ba0da79085f7bd980f1f1" prot="public" virt="non-virtual"><scope>InStream</scope><name>skipChar</name></member>
      <member refid="struct_in_stream_1a66d3e4b4c823f79d1f53ad5901733717" prot="public" virt="non-virtual"><scope>InStream</scope><name>stdfile</name></member>
      <member refid="struct_in_stream_1a8aec5ed448357d952d4fae14e4054d8c" prot="public" virt="non-virtual"><scope>InStream</scope><name>strict</name></member>
      <member refid="struct_in_stream_1a4ff4b2110a80dea66154702116080e49" prot="public" virt="non-virtual"><scope>InStream</scope><name>textColor</name></member>
      <member refid="struct_in_stream_1a8c656e9ae7175e852033fbdffe41550b" prot="public" virt="non-virtual"><scope>InStream</scope><name>unreadChar</name></member>
      <member refid="struct_in_stream_1a8afeeed49266480bd239d832415fb85b" prot="public" virt="non-virtual"><scope>InStream</scope><name>wordReserveSize</name></member>
      <member refid="struct_in_stream_1a7920954e072895d70f2127ccc7af789d" prot="public" virt="non-virtual"><scope>InStream</scope><name>xmlSafeWrite</name></member>
      <member refid="struct_in_stream_1ab75c26c4747d2a23388735cdfebbe4fa" prot="public" virt="non-virtual"><scope>InStream</scope><name>~InStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
