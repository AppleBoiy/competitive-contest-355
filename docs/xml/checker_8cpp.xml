<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="checker_8cpp" kind="file" language="C++">
    <compoundname>checker.cpp</compoundname>
    <includes refid="testlib_8h" local="yes">testlib.h</includes>
    <includes local="no">bits/stdc++.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/checker.cpp</label>
        <link refid="checker_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>testlib.h</label>
        <link refid="testlib_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>bits/stdc++.h</label>
      </node>
      <node id="8">
        <label>cctype</label>
      </node>
      <node id="5">
        <label>climits</label>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="23">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>cstdio</label>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="18">
        <label>cstring</label>
      </node>
      <node id="21">
        <label>fcntl.h</label>
      </node>
      <node id="17">
        <label>fstream</label>
      </node>
      <node id="22">
        <label>functional</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="14">
        <label>iterator</label>
      </node>
      <node id="19">
        <label>limits</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="20">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="24">
        <label>unistd.h</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker.cpp" line="5" column="5" bodyfile="src/checker.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool has[1010]</definition>
        <argsstring>[1010]</argsstring>
        <name>has</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker.cpp" line="7" column="6" bodyfile="src/checker.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="checker_8cpp_1a261b5420e17ff6b4908171e2220d5cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool prime</definition>
        <argsstring>(int x)</argsstring>
        <name>prime</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker.cpp" line="8" column="6" bodyfile="src/checker.cpp" bodystart="8" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readAns</definition>
        <argsstring>(InStream &amp;stream)</argsstring>
        <name>readAns</name>
        <param>
          <type><ref refid="struct_in_stream" kindref="compound">InStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker.cpp" line="17" column="5" bodyfile="src/checker.cpp" bodystart="17" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="checker_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/checker.cpp" line="26" column="5" bodyfile="src/checker.cpp" bodystart="26" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testlib_8h" kindref="compound">testlib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bits/stdc++.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5" refid="checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999" kindref="member">has</ref>[1010];</highlight></codeline>
<codeline lineno="8" refid="checker_8cpp_1a261b5420e17ff6b4908171e2220d5cce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="checker_8cpp_1a261b5420e17ff6b4908171e2220d5cce" kindref="member">prime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>*<sp/>i<sp/>&lt;=<sp/>x;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>%<sp/>i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17" refid="checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0" kindref="member">readAns</ref>(<ref refid="struct_in_stream" kindref="compound">InStream</ref><sp/>&amp;stream)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac" kindref="member">ans</ref><sp/>=<sp/>stream.<ref refid="struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38" kindref="member">readInt</ref>(1,<sp/>1000);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999" kindref="member">has</ref>[<ref refid="testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac" kindref="member">ans</ref>]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checker_8cpp_1a261b5420e17ff6b4908171e2220d5cce" kindref="member">prime</ref>(<ref refid="testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac" kindref="member">ans</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="checker_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="defaultsol_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1aef178d6340fe04d5d616ee2da19488b4" kindref="member">registerTestlibCmd</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240" kindref="member">n</ref><sp/>=<sp/><ref refid="testlib_8h_1ad3874376581d36b1067d501d534d7b34" kindref="member">inf</ref>.<ref refid="struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38" kindref="member">readInt</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="checker_8cpp_1a76f11d9a0a47b94f72c2d0e77fb32240" kindref="member">n</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/><ref refid="testlib_8h_1ad3874376581d36b1067d501d534d7b34" kindref="member">inf</ref>.<ref refid="struct_in_stream_1ab9c40b84ce444e0eabbec47c881b4c38" kindref="member">readInt</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checker_8cpp_1a5e6a1812b4a51260850c1c8c675b0999" kindref="member">has</ref>[x]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jans<sp/>=<sp/><ref refid="checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0" kindref="member">readAns</ref>(<ref refid="testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac" kindref="member">ans</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pans<sp/>=<sp/><ref refid="checker_8cpp_1a5658d4f0098d134fbb3f18f22a031bb0" kindref="member">readAns</ref>(<ref refid="testlib_8h_1a93822943d6413c3eba20a27b9d31336b" kindref="member">ouf</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jans<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01" kindref="member">quitf</ref>(<ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578a62d8da32e96f367adeed7ccb30436457" kindref="member">_fail</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Jury<sp/>answer<sp/>Incorrect,<sp/>The<sp/>number<sp/>is<sp/>not<sp/>prime!!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jans<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01" kindref="member">quitf</ref>(</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578a62d8da32e96f367adeed7ccb30436457" kindref="member">_fail</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Jury<sp/>answer<sp/>Incorrect,<sp/>the<sp/>number<sp/>is<sp/>not<sp/>from<sp/>the<sp/>input<sp/>array!!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pans<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01" kindref="member">quitf</ref>(<ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578a77706596ca6256a69b77e763d6787585" kindref="member">_wa</ref>,<sp/></highlight><highlight class="stringliteral">&quot;participant<sp/>answer<sp/>Incorrect,<sp/>The<sp/>number<sp/>is<sp/>not<sp/>prime.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pans<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01" kindref="member">quitf</ref>(<ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578a77706596ca6256a69b77e763d6787585" kindref="member">_wa</ref>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;participant<sp/>answer<sp/>Incorrect,<sp/>the<sp/>number<sp/>is<sp/>not<sp/>from<sp/>the<sp/>input<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;array.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="testlib_8h_1aca62d65c91dd6453f93a96348e78c5ac" kindref="member">ans</ref>.<ref refid="struct_in_stream_1a2c7c8561462345e6ee18a0d8ea4bc00b" kindref="member">seekEof</ref>())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01" kindref="member">quitf</ref>(<ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578a62d8da32e96f367adeed7ccb30436457" kindref="member">_fail</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Jury<sp/>answer<sp/>contain<sp/>extra<sp/>tokens!!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="testlib_8h_1a93822943d6413c3eba20a27b9d31336b" kindref="member">ouf</ref>.<ref refid="struct_in_stream_1a2c7c8561462345e6ee18a0d8ea4bc00b" kindref="member">seekEof</ref>())</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01" kindref="member">quitf</ref>(<ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578a77706596ca6256a69b77e763d6787585" kindref="member">_wa</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Participant<sp/>answer<sp/>contain<sp/>extra<sp/>tokens.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="testlib_8h_1a5e727281f092efd3f19c6a84e2eacc01" kindref="member">quitf</ref>(<ref refid="testlib_8h_1aca738f43134375f0a18077d633f14578a9d802c77af97a77eec509a12bcf6ae77" kindref="member">_ok</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Passed<sp/>all<sp/>tests.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/checker.cpp"/>
  </compounddef>
</doxygen>
